package main

import (
	"os/exec"

	"github.com/vulncheck-oss/go-exploit"
	"github.com/vulncheck-oss/go-exploit/c2"
	"github.com/vulncheck-oss/go-exploit/config"
	"github.com/vulncheck-oss/go-exploit/output"
)

type ExternalHTTPTest struct{}

func (sploit ExternalHTTPTest) ValidateTarget(_ *config.Config) bool {
	return false
}

func (sploit ExternalHTTPTest) CheckVersion(_ *config.Config) exploit.VersionCheckType {

	return exploit.NotImplemented
}

func (sploit ExternalHTTPTest) RunExploit(conf *config.Config) bool {

	cmd := exec.Command("payload/payload")
	if err := cmd.Run(); err != nil {
		output.PrintfError("%e", err)
	}

	return true
}

func main() {
	supportedC2 := []c2.Impl{
		c2.SimpleExternal,
	}
	conf := config.New(config.CodeExecution, supportedC2, "Payload Test", "N/A", 80)

	sploit := ExternalHTTPTest{}
	exploit.RunProgram(sploit, conf)
}
